name: CI/CD Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - staging

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    outputs:
      build_status: ${{ job.status }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install
        
      - name: Run linting
        run: npm run lint
        
      - name: Run unit tests
        run: npm test
        
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}

  dev-pipeline:
    needs: build-and-test
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install

      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Final Build Check
        run: |
          echo "Running final build check..."
          npm run build
          echo "Build check completed successfully!"

  staging-pipeline:
    needs: build-and-test
    if: github.event_name == 'pull_request' && github.base_ref == 'staging'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install

      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Run Full Test Suite
        run: |
          echo "Running full test suite..."
          npm run lint
          npm test
          npm run build
          echo "Full test suite completed successfully!"

      - name: Merge to Staging
        if: success()
        run: |
          echo "Merging changes to staging..."
          # Merge will be handled by GitHub's branch protection rules
          echo "Merge completed successfully!"

  production-pipeline:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm install

      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .next
            dist
          key: ${{ runner.os }}-build-${{ github.sha }}

      - name: Final Production Check
        run: |
          echo "Running final production checks..."
          npm run lint
          npm test
          npm run build
          echo "Production checks completed successfully!"